name: 'bump'

on:
  workflow_call:
    inputs:
      assignees:
        default: ''
        required: false
        type: 'string'
      reviewers:
        required: true
        type: 'string'
      test:
        default: ''
        required: false
        type: 'string'
    secrets:
      token:
        required: true

jobs:
  bump:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: 'actions/checkout@v3'

      - uses: 'denoland/setup-deno@v1'
        with:
          deno-version: 'v1.x'

      - name: 'bump dependencies'
        run: |
          deno run -A https://raw.githubusercontent.com/azurystudio/bump/v0/mod.ts
          CHANGELOG=$(cat dependencies_changelog.md)
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          rm dependencies_changelog.md

      - name: 'create pull request'
        uses: 'peter-evans/create-pull-request@v4'
        with:
          reviewers: '${{ inputs.reviewers }}'
          token: '${{ secrets.token }}'
          title: 'bump dependencies'
          author: 'GitHub <noreply@github.com>'
          commit-message: 'bump dependencies'
          body: '${{ env.CHANGELOG }}'
          labels: 'dependencies'
          delete-branch: true
          branch: 'bump'

      - id: 'commit'
        if: '${{ inputs.test != "" }}'
        run: |
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      
      - if: '${{ inputs.test != "" }}'
        uses: 'Sibz/github-status-action@v1'
        with:
          authToken: '${{ secrets.token }}'
          context: 'test updates'
          state: 'pending'
          sha: '${{ steps.commit.outputs.sha }}'

      - name: 'test updates'
        id: 'test'
        continue-on-error: true
        if: '${{ inputs.test != "" }}'
        run: '${{ inputs.test }}'

      - name: 'set commit status with outcome'
        if: '${{ inputs.test != "" }}'
        uses: 'Sibz/github-status-action@v1'
        with:
          authToken: '${{ secrets.token }}'
          context: 'test updates'
          state: '${{ steps.test.outcome }}'
          sha: '${{ steps.commit.outputs.sha }}'
